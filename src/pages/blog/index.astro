---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import type { SEOProps } from '../../utils/seo';
import BaseLayout from '../../layouts/BaseLayout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';

// Get all blog posts
const posts = await getCollection('blog');

// Sort posts by date
const sortedPosts = posts
  .filter((post: CollectionEntry<'blog'>) => !post.data.draft)
  .sort((a: CollectionEntry<'blog'>, b: CollectionEntry<'blog'>) => 
    b.data.publishedDate.valueOf() - a.data.publishedDate.valueOf()
  );

// SEO
const seo: SEOProps = {
  title: 'Blog',
  description: 'Kumpulan artikel tentang web development, teknologi, dan berbagai tips menarik lainnya.',
  type: 'website' as const
};

// Format date
const formatDate = (date: Date) => {
  return date.toLocaleDateString('id-ID', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
};
---

<BaseLayout seo={seo}>
  <Fragment slot="header">
    <Header />
  </Fragment>

  <main class="container mx-auto px-4 py-8">
    <header class="text-center mb-12">
      <h1 class="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-4">
        Blog
      </h1>
      <p class="text-xl text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
        Kumpulan artikel tentang web development, teknologi, dan berbagai tips menarik lainnya.
      </p>
    </header>

    <!-- Featured Posts -->
    {sortedPosts.filter((post: CollectionEntry<'blog'>) => post.data.featured).length > 0 && (
      <section class="mb-16">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-8">
          Artikel Unggulan
        </h2>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
        {sortedPosts
            .filter((post: CollectionEntry<'blog'>) => post.data.featured)
            .map((post: CollectionEntry<'blog'>) => (
              <article class="card overflow-hidden transition-transform hover:scale-[1.02]">
                {post.data.image && (
                  <div class="relative h-48 md:h-64">
                    <img
                      src={post.data.image}
                      alt={post.data.imageAlt || post.data.title}
                      class="w-full h-full object-cover"
                      loading="lazy"
                    />
                  </div>
                )}
                <div class="p-6">
                  <div class="flex flex-wrap gap-2 mb-4">
                    {post.data.tags?.map((tag: string) => (
                      <span class="px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 text-sm rounded-full">
                        #{tag}
                      </span>
                    ))}
                  </div>
                  <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-2">
                    <a href={`/blog/${post.slug}/`} class="hover:text-primary-600 dark:hover:text-primary-400">
                      {post.data.title}
                    </a>
                  </h3>
                  <p class="text-gray-600 dark:text-gray-400 mb-4">
                    {post.data.description}
                  </p>
                  <div class="flex items-center justify-between text-sm text-gray-600 dark:text-gray-400">
                    <span>{formatDate(post.data.publishedDate)}</span>
                    {post.data.readingTime && (
                      <span>{post.data.readingTime}</span>
                    )}
                  </div>
                </div>
              </article>
            ))}
        </div>
      </section>
    )}

    <!-- All Posts -->
    <section>
      <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-8">
        Semua Artikel
      </h2>
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {sortedPosts.map((post: CollectionEntry<'blog'>) => (
          <article class="card overflow-hidden transition-transform hover:scale-[1.02]">
            {post.data.image && (
              <div class="relative h-48">
                <img
                  src={post.data.image}
                  alt={post.data.imageAlt || post.data.title}
                  class="w-full h-full object-cover"
                  loading="lazy"
                />
              </div>
            )}
            <div class="p-6">
              <div class="flex flex-wrap gap-2 mb-4">
                {post.data.tags?.map((tag: string) => (
                  <span class="px-3 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 text-sm rounded-full">
                    #{tag}
                  </span>
                ))}
              </div>
              <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-2">
                <a href={`/blog/${post.slug}/`} class="hover:text-primary-600 dark:hover:text-primary-400">
                  {post.data.title}
                </a>
              </h3>
              <p class="text-gray-600 dark:text-gray-400 mb-4">
                {post.data.description}
              </p>
              <div class="flex items-center justify-between text-sm text-gray-600 dark:text-gray-400">
                <span>{formatDate(post.data.publishedDate)}</span>
                {post.data.readingTime && (
                  <span>{post.data.readingTime}</span>
                )}
              </div>
            </div>
          </article>
        ))}
      </div>
    </section>
  </main>

  <Fragment slot="footer">
    <Footer />
  </Fragment>
</BaseLayout>
