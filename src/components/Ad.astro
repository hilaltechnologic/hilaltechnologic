---
import { shouldShowAds, getAdConfig } from '../config/ads';

type AdSlot = 'header' | 'sidebar' | 'content' | 'footer';
type AdType = 'display' | 'in-article' | 'auto';

interface Props {
  slot: AdSlot;
  type?: AdType;
  className?: string;
}

interface CustomAdConfig {
  html: string;
  script?: string;
}

type AdConfig = 
  | { platform: 'adsense'; publisherId: string; slotId: string }
  | { platform: 'medianet'; siteId: string; slotId: string }
  | { platform: 'propellerads'; zoneId: string }
  | { platform: 'custom'; config: CustomAdConfig }
  | null;

const { 
  slot,
  type = 'auto',
  className = ''
} = Astro.props;

// Class styling berdasarkan slot
const slotClasses: Record<AdSlot, string> = {
  header: 'w-full h-[90px] mb-6',
  sidebar: 'w-full h-[600px] mb-6',
  content: 'w-full h-[280px] my-6',
  footer: 'w-full h-[90px] mt-6'
};

// Cek apakah iklan harus ditampilkan
const showAds = shouldShowAds();
const adConfig = showAds ? getAdConfig(slot) as AdConfig : null;
---

{showAds && (
  <div class:list={[
    'ad-container bg-gray-100 dark:bg-gray-800 rounded-lg overflow-hidden flex items-center justify-center',
    slotClasses[slot],
    className
  ]}>
    {adConfig?.platform === 'adsense' && (
      <Fragment>
        <script async src={`https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=${adConfig.publisherId}`}></script>
        <ins
          class="adsbygoogle"
          style="display:block"
          data-ad-client={adConfig.publisherId}
          data-ad-slot={adConfig.slotId}
          data-ad-format={type}
          data-full-width-responsive="true"
        ></ins>
        <script is:inline define:vars={{ slot: adConfig.slotId }}>
          (window.adsbygoogle = window.adsbygoogle || []).push({});
        </script>
      </Fragment>
    )}

    {adConfig?.platform === 'medianet' && (
      <div id={`mnet-${adConfig.slotId}`}>
        <script async src={`//contextual.media.net/dmedianet.js?cid=${adConfig.siteId}`}></script>
        <script is:inline define:vars={{ slotId: adConfig.slotId }}>
          window._mNHandle = window._mNHandle || {};
          window._mNHandle.queue = window._mNHandle.queue || [];
          window._mNHandle.queue.push(function() {
            window._mNDetails.loadTag(slotId);
          });
        </script>
      </div>
    )}

    {adConfig?.platform === 'propellerads' && (
      <div id={`propeller-${adConfig.zoneId}`}>
        <script is:inline define:vars={{ zoneId: adConfig.zoneId }}>
          window.propellerads = window.propellerads || { cmd: [] };
          propellerads.cmd.push(function() {
            propellerads.push({
              zoneId: zoneId,
              containerId: `propeller-${zoneId}`
            });
          });
        </script>
      </div>
    )}

    {adConfig?.platform === 'custom' && (
      <Fragment>
        <div set:html={adConfig.config.html} />
        {adConfig.config.script && <script set:html={adConfig.config.script} />}
      </Fragment>
    )}
  </div>
)}

<style>
  .ad-container {
    min-height: 100px;
  }
  
  @media (max-width: 768px) {
    .ad-container {
      min-height: 60px;
    }
  }
</style>
